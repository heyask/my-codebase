scalar DateTime

type Frontmatter {
  id: String
  title: String
  description: String
  category: String
  company: String
  thumbnail: String
  lang: String
  url: String
  published: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  startAt: DateTime
  endAt: DateTime
}
type PageInfo {
  hasNextPage: Boolean!
  endCursor: ID
}
type PostEdge {
  cursor: String!
  node: Post!
}
type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge!]!
}
type Post {
  id: ID
  frontmatter: Frontmatter
  content: String
}
type ProjectEdge {
  cursor: String!
  node: Project!
}
type ProjectConnection {
  pageInfo: PageInfo!
  edges: [ProjectEdge!]!
}
type Project {
  id: ID
  frontmatter: Frontmatter
  content: String
}
type About {
  id: ID
  frontmatter: Frontmatter
  content: String
}
type Query {
  posts: PostConnection
  post(postId: ID): Post
  projects: ProjectConnection
  project(projectId: ID): Project
  about(aboutId: ID): About
}
